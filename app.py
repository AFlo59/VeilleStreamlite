import streamlit as st
import feedparser
import json
import os

# ---------- Fonctions Utilitaires ----------

CHANNEL_FILE = "youtube_channels.json"

def load_channels():
    if os.path.exists(CHANNEL_FILE):
        with open(CHANNEL_FILE, "r") as f:
            return json.load(f)
    return {}

def save_channels(channels):
    with open(CHANNEL_FILE, "w") as f:
        json.dump(channels, f, indent=4)

# ---------- Interface Streamlit ----------

st.set_page_config(page_title="Veille IA YouTube", layout="wide")
st.title("üì∫ Veille YouTube ‚Äì Flux RSS IA")

channels = load_channels()

# --- Section : Ajouter une nouvelle cha√Æne ---
with st.expander("‚ûï Ajouter une cha√Æne YouTube"):
    name = st.text_input("Nom de la cha√Æne")
    channel_id = st.text_input("Channel ID (YouTube)")

    if st.button("Ajouter"):
        if name and channel_id:
            channels[name] = channel_id
            save_channels(channels)
            st.success(f"Cha√Æne '{name}' ajout√©e !")
            st.experimental_rerun()
        else:
            st.warning("Merci de renseigner un nom et un Channel ID.")

# --- Section : Supprimer une cha√Æne existante ---
with st.expander("‚ûñ Supprimer une cha√Æne YouTube"):
    if channels:
        to_delete = st.selectbox("S√©lectionner une cha√Æne √† supprimer :", list(channels.keys()))
        if st.button("Supprimer"):
            del channels[to_delete]
            save_channels(channels)
            st.success(f"Cha√Æne '{to_delete}' supprim√©e.")
            st.experimental_rerun()
    else:
        st.info("Aucune cha√Æne enregistr√©e.")

# --- Section : Affichage des vid√©os ---
st.subheader("üé¨ Derni√®res vid√©os disponibles")

if not channels:
    st.warning("Aucune cha√Æne enregistr√©e. Ajoutez-en ci-dessus.")
else:
    selected = st.selectbox("Choisir une cha√Æne :", list(channels.keys()))
    channel_id = channels[selected]
    rss_url = f"https://www.youtube.com/feeds/videos.xml?channel_id={channel_id}"
    feed = feedparser.parse(rss_url)

    for entry in feed.entries[:5]:
        st.markdown(f"### [{entry.title}]({entry.link})")
        st.write(f"üïí {entry.published}")
        st.write("---")
